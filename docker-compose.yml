version: "3.9"

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
    networks:
      - web

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - DEFAULT_EMAIL=lucas.huchede@gmail.com
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
    depends_on:
      - nginx-proxy
    networks:
      - web

  frontend:
    build: ./frontend
    container_name: react-app
    restart: always
    environment:
      - VIRTUAL_HOST=basique-cuisine.site
      - LETSENCRYPT_HOST=basique-cuisine.site
      - LETSENCRYPT_EMAIL=lucas.huchede@gmail.com
    expose:
      - "80"
    networks:
      - web

  backend:
    build: ./backend
    container_name: laravel-api
    restart: always
    volumes:
      - ./backend:/var/www/app
    environment:
      - VIRTUAL_HOST=api.basique-cuisine.site
      - LETSENCRYPT_HOST=api.basique-cuisine.site
      - LETSENCRYPT_EMAIL=lucas.huchede@gmail.com
    expose:
      - "80"
    depends_on:
      - mysql_db
    networks:
      - web

  mysql_db:
    image: mysql:latest
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=laravel
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - web

volumes:
  mysql_data:

networks:
  web:
    driver: bridge
