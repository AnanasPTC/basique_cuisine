version: "3.9"

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
    networks:
      - default
    restart: always

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - DEFAULT_EMAIL=tonemail@example.com
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
    depends_on:
      - nginx-proxy
    networks:
      - default
    restart: always

  backend:
    build: ./backend
    container_name: laravel-api
    volumes:
      - ./backend:/var/www/app
    depends_on:
      - mysql_db
    environment:
      - VIRTUAL_HOST=api.basique-cuisine.site
      - LETSENCRYPT_HOST=api.basique-cuisine.site
      - LETSENCRYPT_EMAIL=tonemail@example.com
    networks:
      - default
    restart: always

  frontend:
    build: ./frontend
    container_name: react-app
    environment:
      - VIRTUAL_HOST=basique-cuisine.site
      - LETSENCRYPT_HOST=basique-cuisine.site
      - LETSENCRYPT_EMAIL=tonemail@example.com
    networks:
      - default
    restart: always

  mysql_db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - default
    restart: always

volumes:
  mysql_data:

networks:
  default:
